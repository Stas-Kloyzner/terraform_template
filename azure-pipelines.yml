
trigger:
- main

pool:
  name: w7pool

stages:
# - stage: install
#   displayName: install terraform
  
#   jobs:
#   - job: install
#     displayName: install terraform and prerequisites

#     steps:
    
    # - task: CmdLine@2
    #   inputs:
    #     script: |
    #       sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
    #   displayName: 'update system and get gnupg and curl packages'

    # - task: CmdLine@2
    #   inputs:
    #     script: |
    #       curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
    #       sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    #       sudo apt-get update && sudo apt-get install terraform
    #   displayName: 'install terraform'
    
- stage: staging_init_and_plan
  variables:
  - group: azure_credentials
  # dependsOn: install
  displayName: terraform init and plan
  
  jobs:
  - job: init_and_plan
    displayName: terraform terraform init and plan

    steps:
    - task: CmdLine@2
      inputs:
        script: |
          export ARM_CLIENT_ID=$(client_id)
          export ARM_CLIENT_SECRET=$(secret)
          export ARM_TENANT_ID=$(tenant)
          export ARM_SUBSCRIPTION_ID=$(subscription_id)
          echo $(client_id)
          echo $ARM_CLIENT_ID
        workingDirectory: '$(agent.builddirectory)/s'
      displayName: 'export az credentials'
      
    # - task: CmdLine@2
    #   inputs:
    #     script: |
    #       terraform init
    #       terraform workspace select staging || terraform workspace new staging
    #       terraform init
    #       terraform plan -out=plan.file -var 'environment=$rg' -var 'vmss_admin_username=$user' -var 'vmss_admin_password=$pass'
    #     workingDirectory: '$(agent.builddirectory)/s'
    #   displayName: 'echo az credentials'

    # - task: AzureCLI@2
    #   displayName: Azure CLI terraform staging
    #   inputs:
    #     azureSubscription: azure_pass
    #     scriptType: bash
    #     scriptLocation: inlineScript
    #     inlineScript: |
        #   terraform workspace select staging || terraform workspace new staging
        #   terraform init
        #   terraform plan -out=plan.file -var 'environment=$rg' -var 'vmss_admin_username=$user' -var 'vmss_admin_password=$pass'
        # workingDirectory: '$(agent.builddirectory)/s'
      
    # - task: CmdLine@2
    #   inputs:
    #     script: 'sudo apt-get -y install zip'
    #   displayName: 'install zip'

    # - task: ArchiveFiles@2
    #   inputs:
    #     rootFolderOrFile: '$(agent.builddirectory)/s'
    #     includeRootFolder: false
    #     archiveType: 'zip'
    #     archiveFile: '$(agent.builddirectory)/a/terraform.zip'
    #     replaceExistingArchive: true
    #     verbose: true

    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(agent.builddirectory)/a'
    #     ArtifactName: 'terraform'
    #     publishLocation: 'Container'
