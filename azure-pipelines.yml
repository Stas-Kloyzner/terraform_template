
trigger:
- main

pool:
  name: w7pool

stages:
- stage: install
  displayName: install terraform
  
  jobs:
  - job: install
    displayName: install terraform

    steps:
    # - task: CmdLine@2
    #   inputs:
    #     script: 'sudo apt-get -y install zip'
    #   displayName: 'install zip'
    
    - task: CmdLine@2
      inputs:
        script: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform
      displayName: 'install terraform'

    # - task: TerraformInstaller@0
    #   inputs:
    #     terraformVersion: 'latest'
    #   displayName: install terraform
    
    # - task: AzureCLI@2
    #   displayName: Azure CLI terraform staging
    #   inputs:
    #     azureSubscription: azure_pass
    #     scriptType: bash
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       terraform workspace select staging || terraform workspace new staging
    #       terraform init
    #       terraform plan -out=plan.file -var 'environment=<value>' -var '<input-variable-name>=<value>' -var '<input-variable-name>=<value>'
    #     workingDirectory: '$(agent.builddirectory)/s'


    # - task: ArchiveFiles@2
    #   inputs:
    #     rootFolderOrFile: '$(agent.builddirectory)/s'
    #     includeRootFolder: false
    #     archiveType: 'zip'
    #     archiveFile: '$(agent.builddirectory)/a/terraform.zip'
    #     replaceExistingArchive: true
    #     verbose: true

    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(agent.builddirectory)/a'
    #     ArtifactName: 'terraform'
    #     publishLocation: 'Container'
