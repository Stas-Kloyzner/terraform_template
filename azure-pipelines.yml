
trigger:
- main

pool:
  name: w7pool

stages:
- stage: Terraform_CI
  displayName: Terraform_CI
  
  jobs:
  - job: install
    displayName: install terraform and prerequisites

    # steps:
    
#     - task: CmdLine@2
#       inputs:
#         script: |
#           sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
#       displayName: 'update system and get gnupg and curl packages'

#     - task: CmdLine@2
#       inputs:
#         script: |
#           curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
#           sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
#           sudo apt-get update && sudo apt-get install terraform
#       displayName: 'install terraform'

  - job: staging_init_and_plan
    variables:
    - group: staging_vars
    - group: azure_credentials
    dependsOn: install
    displayName: staging_init_and_plan

    steps:
    - checkout: none
    - task: CmdLine@2
      inputs:
        script: |
          export ARM_CLIENT_ID=$(client_id)
          export ARM_CLIENT_SECRET=$(secret)
          export ARM_TENANT_ID=$(tenant)
          export ARM_SUBSCRIPTION_ID=$(subscription_id)
          terraform init
          terraform workspace select $(rg) || terraform workspace new $(rg)
          terraform init
          terraform plan -out=$(rg)_plan -var 'environment=$(rg)' -var 'vmss_admin_username=$(vmss_admin)' -var 'vmss_admin_password=$(vmss_pass) -var 'vmss_instances=$(vmss_instances)'
        workingDirectory: '$(agent.builddirectory)/s'
      displayName: staging_init_and_plan
      
  - job: production_init_and_plan
    variables:
    - group: production_vars
    - group: azure_credentials
    dependsOn: staging_init_and_plan
    displayName: production_init_and_plan

    steps:
    - checkout: none
    - task: CmdLine@2
      inputs:
        script: |
          export ARM_CLIENT_ID=$(client_id)
          export ARM_CLIENT_SECRET=$(secret)
          export ARM_TENANT_ID=$(tenant)
          export ARM_SUBSCRIPTION_ID=$(subscription_id)
          terraform init
          terraform workspace select $(rg) || terraform workspace new $(rg)
          terraform init
          mkdir '$(rg)_plan'
          terraform plan -out=$(rg)_plan -var 'environment=$(rg)' -var 'vmss_admin_username=$(vmss_admin)' -var 'vmss_admin_password=$(vmss_pass) -var 'vmss_instances=$(vmss_instances)'
        workingDirectory: '$(agent.builddirectory)/s'
      displayName: production_init_and_plan

  - job: package_and_export_artifct
    dependsOn: production_init_and_plan
    displayName: package_and_export_artifct
  
    steps:
    - checkout: none
    - task: CmdLine@2
      inputs:
        script: 'sudo apt-get -y install zip'
      displayName: 'install zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(agent.builddirectory)/s'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(agent.builddirectory)/a/terraform.zip'
        replaceExistingArchive: true
        verbose: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(agent.builddirectory)/a'
        ArtifactName: 'terraform'
        publishLocation: 'Container'
